package io.codelex.flightplanner.domain;import java.util.List;import java.util.Objects;public class PageResults<T> {    private int page;    private int totalItems;    private List<T> items;    public PageResults(int page, int totalItems, List<T> items) {        this.page = page;        this.totalItems = totalItems;        this.items = items;    }    public int getPage() {        return page;    }    public void setPage(int page) {        this.page = page;    }    public int getTotalItems() {        return totalItems;    }    public void setTotalItems(int totalItems) {        this.totalItems = totalItems;    }    public List<T> getItems() {        return items;    }    public void setItems(List<T> items) {        this.items = items;    }    @Override    public boolean equals(Object o) {        if (this == o) {            return true;        }        if (!(o instanceof PageResults<?> that)) {            return false;        }        return getPage() == that.getPage() && getTotalItems() == that.getTotalItems() && getItems().equals(that.getItems());    }    @Override    public int hashCode() {        return Objects.hash(getPage(), getTotalItems(), getItems());    }    @Override    public String toString() {        return "PageResults{" + "pages=" + page + ", totalItems=" + totalItems + ", results=" + items + '}';    }}